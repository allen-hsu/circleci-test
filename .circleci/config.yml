# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
# For a detailed guide to building and testing on Android, read the docs:
# https://circleci.com/docs/2.0/language-android/ for more details.
version: 2.1


jvm_environment: &jvm_environment
  environment:
    FOO: "FOO12345678"
test_environment: &test_environment
  environment:
    BOO: "BOO12345678"
# # Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# # See: https://circleci.com/docs/2.0/orb-intro/
# orbs:
#   android: circleci/android@sha256:b6646fdf7457f61825526e7bfce364d8e533da6ceb1cdb98e371e94348ecc834
executors:
  android-executor:
    docker:
      - image: circleci/android:api-29-node

commands:
  sub-command:
    parameters:
      build_variant:
        type: string
        default: "debug"
    steps: 
      - run:
          name: sub-command test
          command : |
            echo "sub test : << parameters.build_variant >>"
  build-command:
    parameters:
      build_variant:
        type: string
        default: "debug"
    steps: 
      - checkout
      - run:
          name: install pngquant
          command : |
            sudo apt-get update -y
            sudo apt-get install liblcms2-utils pngquant -y
            find ./ -name '*.png' | xargs pngquant --ext .png --force 256
            echo "<< parameters.build_variant >>"
      - sub-command:
          build_variant: << parameters.build_variant >>
  
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test: 
    <<: *jvm_environment
    executor: android-executor
    steps:
      - build-command:
          build_variant: test
    
  build-and-test-extend:
    <<: *jvm_environment
    <<: *test_environment
    executor: android-executor
    steps:
      - build-command:
          build_variant: test-extend
      - run:
          name: test-extend
          command : |
            echo "test-extend"
            echo ${FOO}
            echo ${BOO}
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
      - build-and-test-extend
